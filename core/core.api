syntax = "v1"

service core-api {
	@doc "用户登陆"
	@handler UserLogin
	post /user/login(LoginRequest) returns (LoginReply)

	@doc  "用户详情"
	@handler UserDetail
	get /user/detail(UserDetailRequest) returns (UserDetailReply)

	@doc  "验证码发送"
	@handler MailCodeSendRegister
	post /mail/code/send/register(MailCodeRequest) returns (MailCodeReply)

	@doc  "用户注册"
	@handler UserRegister
	post /user/register(UserRegisterRequest) returns (UserRegisterReply)

	@doc  "分享资源详情"
	@handler ShareBasicDetail
	get /share/basic/detail(ShareBasicDetailRequest) returns (ShareBasicDetailReply)

}

@server(
	middleware:Auth
)

service core-api{
	@doc  "文件上传"
	@handler FileUpload
	post /file/upload(FileUploadRequest) returns (FileUploadReply)

	@doc "用户文件关联存储"
	@handler UserRepositorySave
	post /user/repository/save(UserRepositoryRequest)returns(UserRepositoryReply)

	@doc "用户文件文件列表"
	@handler UserFileList
	get /user/file/list(UserFileListRequest)returns(UserFileListReply)

	@doc "用户文件名称修改"
	@handler UserFileNameUpdate
	post /user/file/name/update(UserFileNameUpdateRequest)returns(UserFileNameUpdateReply)

	@doc "用户文件夹创建"
	@handler UserFolderCreate
	post /user/folder/create(UserFolderCreateRequest)returns(UserFolderCreateReply)

	@doc "用户文件删除"
	@handler UserFileDelete
	delete /user/file/delete(UserFileDeleteRequest)returns(UserFileDeleteReply)

	@doc "用户文件修改"
	@handler UserFileMove
	put /user/file/move(UserFileMoveRequest)returns(UserFileMoveReply)

	@doc "创建分享"
	@handler ShareBasicCreate
	post /share/basic/create(ShareBasicCreateRequest)returns(ShareBasicCreateReply)

	@doc "分享资源的保存"
	@handler ShareBasicSave
	post /share/basic/save(ShareBasicSaveRequest)returns(ShareBasicSaveReply)

	@doc "刷新Authorization"
	@handler RefreshAuthorization
	post /refresh/authorization(RefreshAuthorizationRequest)returns(RefreshAuthorizationSaveReply)

	@doc "文件分片上传基本处理"
	@handler FileUploadPrepare
	post /file/upload/prepare(FileUploadPrepareRequest)returns(FileUploadPrepareReply)

	@doc "文件分片上传"
	@handler FileUploadChunk
	post /file/upload/chunk(FileUploadChunkRequest)returns(FileUploadChunkReply)

	@doc "文件分片上传完成"
	@handler FileUploadChunkComplete
	post /file/upload/chunk/complete(FileUploadChunkCompleteRequest)returns(FileUploadChunkCompleteReply)

}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginReply {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailReply {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeRequest {
	Email string `json:"email"`
}
type MailCodeReply{}

type UserRegisterRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}
type UserRegisterReply{}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}
type FileUploadReply {
	Identity string `json:"identity"`
	Name     string `json:"name"`
	Ext      string `json:"ext"`
}

type UserRepositoryRequest {
	ParentId           int    `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositoryReply {
}

type UserFileListRequest {
	Id   int `json:"id,optional"`
	Page int `json:"page,optional"`
	Size int `json:"size,optional"`
}
type UserFileListReply {
	List  []*UserFile `json:"list"`
	Count int         `json:"count"`
}
type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
}

type UserFileNameUpdateRequest {
	Name     string `json:"name"`
	Identity string `json:"identity"`
}

type UserFileNameUpdateReply{}

type UserFolderCreateRequest {
	ParentId int64  `json:"parent_id"`
	Name     string `json:"name"`
}
type UserFolderCreateReply {
	Identity string `json:"identity"`
}

type UserFileDeleteRequest {
	Identity string `json:"identity"`
}
type UserFileDeleteReply{}

type UserFileMoveRequest {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parent_identity"`
}
type UserFileMoveReply {}

type ShareBasicCreateRequest {
	UserRepositoryIdentity string `json:"user_repository_identity"`
	ExpiredTime            int    `json:"expired_time"`
}
type ShareBasicCreateReply {
	Identity string `json:"identity"`
}

type ShareBasicDetailRequest {
	Identity string `json:"identity"`
}
type ShareBasicDetailReply {
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int64  `json:"size"`
	Path               string `json:"path"`
}

type ShareBasicSaveRequest {
	RepositoryIdentity string `json:"repository_identity"`
	ParentId           int64  `json:"parent_id"`
}
type ShareBasicSaveReply {
	Identity string `json:"identity"`
}

type RefreshAuthorizationRequest{}

type RefreshAuthorizationSaveReply {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type FileUploadPrepareRequest {
	Md5  string `json:"md5"`
	Name string `json:"name"`
	Ext  string `json:"ext"`
}

type FileUploadPrepareReply {
	Identity string `json:"identity"`
	UploadId string `json:"upload_id"`
	Key      string `json:"key"`
}

type FileUploadChunkRequest {
	//key
	//upload_id
	//part_number
}

type FileUploadChunkReply {
	Etag string `json:"etag"`
}

type FileUploadChunkCompleteRequest {
	Key        string      `json:"key"`
	UploadId   string      `json:"upload_id"`
	CosObjects []CosObject `json:"cos_objects"`
}
type FileUploadChunkCompleteReply {}
type CosObject {
	PartNumber int    `json:"part_number"`
	Etag       string `json:"etag"`
}